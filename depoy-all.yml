apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      run: zookeeper
  template:
    metadata:
      labels:
        run: zookeeper
    spec:
      containers:
        - image: wurstmeister/zookeeper
          imagePullPolicy: IfNotPresent
          name: zookeeper
          ports:
            - containerPort: 2181
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka
  template:
    metadata:
      labels:
        run: kafka
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP #minikube ip
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
            - name: KAFKA_CREATE_TOPICS
              value: checkout1:1:1,checkout2:1:1
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          name: kafka
          ports:
            - containerPort: 9092
---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      run: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: apache
    spec:
      containers:
        - image: docker.io/mmlinac/apache:latest
          name: apache
          ports:
            - containerPort: 80
          resources: {}
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: checkout
  name: checkout
spec:
  replicas: 1
  selector:
    matchLabels:
      run: checkout
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: checkout
    spec:
      containers:
        - image: mmlinac/kube-checkout-service
          name: checkout
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: orderservice
  name: orderservice
spec:
  replicas: 1
  selector:
    matchLabels:
      run: orderservice
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: orderservice
    spec:
      containers:
        - image: mmlinac/kube-orderservice
          name: orderservice
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: usertask
  name: usertask
spec:
  replicas: 1
  selector:
    matchLabels:
      run: usertask
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: usertask
    spec:
      containers:
        - image: mmlinac/kube-usertask
          name: usertask
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: versand
  name: versand
spec:
  replicas: 1
  selector:
    matchLabels:
      run: versand
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: versand
    spec:
      containers:
        - image: mmlinac/kube-versand-service
          name: versand
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: zahlung
  name: zahlung
spec:
  replicas: 1
  selector:
    matchLabels:
      run: zahlung
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: zahlung
    spec:
      containers:
        - image: mmlinac/kube-zahlung-service
          name: zahlung
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: bonuspunkte
  name: bonuspunkte
spec:
  replicas: 1
  selector:
    matchLabels:
      run: bonuspunkte
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: bonuspunkte
    spec:
      containers:
        - image: mmlinac/kube-bonuspunkte-service
          name: bonuspunkte
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    run: zookeeper-service
  name: zookeeper-service
spec:
  ports:
    - name: zookeeper-port
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    run: zookeeper

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    run: kafka
spec:
  type: NodePort
  ports:
    - name: kafka-port
      port: 9092
      targetPort: 9092
      protocol: TCP
  selector:
    run: kafka
---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    run: apache
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: checkout
  name: checkout
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: checkout
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: orderservice
  name: orderservice
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: orderservice
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: usertask
  name: usertask
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: usertask
  type: LoadBalancer
status:
  loadBalancer: {}


---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: versand
  name: versand
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: versand
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: zahlung
  name: zahlung
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: zahlung
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: bonuspunkte
  name: bonuspunkte
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: bonuspunkte
  type: LoadBalancer
status:
  loadBalancer: {}